module.exports = {
  taxIntegrations: [
    {
      code: 'oop-tax-integration1',
      title: 'My tax integration1',
      active: true,
      stores: [
        'default'
      ]
    }
  ],

  paymentMethods: [
    {
      code: 'method-1',
      title: 'Method one',
      active: true,
      backend_integration_url: 'http://oope-payment-method.pay/event',
      stores: [
        'default'
      ],
      order_status: 'processing',
      countries: [
        'US'
      ],
      currencies: [
        'USD'
      ],
      custom_config: [
        {
          key: 'can_refund',
          value: true
        }
      ]
    }
  ],

  shippingCarriers: [
    {
      code: 'DPS',
      title: 'Demo Postal Service',
      stores: [
        'default'
      ],
      countries: [
        'US',
        'CA'
      ],
      sort_order: 10,
      active: true,
      tracking_available: true,
      shipping_labels_available: true
    }
  ],

  eventProviders: [
    {
      // Mandatory fields of event providers: label, provider_metadata
      label: "3rd party events test",
      provider_metadata: "3rd_party_custom_events",
      description: "Test provider for events from a 3rd party system",
      docs_url: "https://3rdparty.com/docs",
      events_metadata: [
        {
          // Mandatory fields of event metadata: event_code, label
          event_code: "com.3rdparty.events.test.Event1",
          label: "Test event 1",
          description: "Test event 1 for 3rd party system"
        }
      ]
    },
    {
      label: "Commerce events provider",
      provider_metadata: "dx_commerce_events",
      description: "Event provider for Adobe Commerce",
      docs_url: "https://developer.adobe.com/commerce/extensibility/events/",
      // Commerce event subscription payload: https://developer.adobe.com/commerce/extensibility/events/api/#subscribe-to-events
      // In the case of Commerce events, events_metadata will be generated by the `configure-commerce-events` script
      subscription: [
        {
          event: {
            // Set the prefix to your application name (lowercase, alphanumeric, underscores allowed).
            // This prefix must match the one used in app.config.yaml to ensure uniqueness across providers.
            // <your-application-name>.<commerce-event-code> eg: your-application-name = checkout_starter_kit
            name: "checkout_starter_kit.observer.sales_order_creditmemo_save_after",
            // Original commerce event name
            parent: "observer.sales_order_creditmemo_save_after",
            fields: "*"
          }
        }
      ]
    }
  ]
};
